global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}

enabled: true
environment: development
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: true
imagePullPolicy: Always

podAnnotations: {}

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

caSecretName: ''
caPath: '/usr/local/share/ca-certificates'
caKey: 'ca.crt'

tracing:
  enabled: false
  url: ''

metrics:
  enabled: false
  url: ''
  prometheus:
    scrape: false
    port: 8080

image:
  repository: polygon-parts-manager
  tag: 'latest'

env:
  port: 8080
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  application:
    arraySeparator: ','
    createPolygonPartsTablesStoredProcedure: 'create_polygon_parts_tables'
    updatePolygonPartsTablesStoredProcedure: 'update_polygon_parts'
    entities:
      parts:
        namePrefix: ''
        nameSuffix: '_parts'
      polygonParts:
        namePrefix: ''
        nameSuffix: ''

# external
db:
  host: localhost
  port: 5432
  username: postgres
  password: postgres
  name: postgres
  schema: polygon_parts
  logging: false
  applicationName: polygon_parts
  sslEnabled: false
  sslAuth:
    sslMountPath: /mnt/db/secrets
    certFileName: postgresql.crt
    keyFileName: postgresql.key
    caFileName: root.crt
  secrets:
    useExternal: false
    externalSecretName: ''

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

route:
  enabled: false
  path: /
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)

ingress:
  enabled: false
  type: 'nginx-org' # supported values: 'nginx-org' | 'nginx-kubernetes'
  path: /
  host: 'localhost'
  cors:
    enabled: true
    origin: '*'
