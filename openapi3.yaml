openapi: 3.0.3
info:
  title: Polygon-Parts Manager
  description: CRUD operations to manage polygon-parts
  version: 1.2.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
tags:
  - name: polygon-parts
    description: CRUD operations to manage polygon-parts
paths:
  /polygonParts:
    post:
      tags:
        - polygon-parts
      summary: Create new polygon-parts
      description: Create new polygon-parts
      operationId: createPolygonParts
      requestBody:
        description: polygon-parts payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolygonPartsPayload'
        required: true
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                type: string
                example: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - polygon-parts
      parameters:
        - in: query
          name: isSwap
          schema:
            type: boolean
            default: false
          description: defines if operation is a swap update
      summary: Update an existing polygon-parts
      description: Update an existing polygon-parts
      operationId: updatePolygonParts
      requestBody:
        description: polygon-parts metadata payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolygonPartsPayload'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
components:
  schemas:
    PolygonPartsPayload:
      $ref: >-
        ./Schema/polygonPartsManager/payload.yaml#/components/schemas/PolygonPartsPayload
    ErrorMessage:
      type: object
      properties:
        message:
          type: string
        stacktrace:
          type: string
      required:
        - message
